process {
    memory = { 4.GB * task.attempt }
    withName: README {
        time = { 5.m * task.attempt }
        executor = "slurm"
    }
    withName: Bet_Prelim_DWI {
        time = { 5.m * task.attempt }
        executor = "slurm"
    }
    withName: Denoise_DWI {
        time = { 5.m * task.attempt }
        executor = "slurm"
    }
    withName: Gibbs_correction {
        time = { 5.m * task.attempt }
        executor = "slurm"
    }
    withName: Prepare_for_Topup {
        time = { 5.m * task.attempt }
        executor = "slurm"
    }
    withName: Topup {
        time = { 1.h * task.attempt }
        executor = "slurm"
    }
    withName: Prepare_dwi_for_eddy {
        time = { 5.m * task.attempt }
        executor = "slurm"
    }
    withName: Eddy_Topup {
        time = { 1.5h * task.attempt }
        executor = "slurm"
    }
    withName: Eddy {
        time = { 2.h * task.attempt }
        executor = "slurm"
    }
    withName: Bet_DWI {
        time = { 5.m * task.attempt }
        executor = "slurm"
    }
    withName: N4_DWI {
        time = { 8.m * task.attempt }
        executor = "slurm"
    }
    withName: Crop_DWI {
        time = { 5.m * task.attempt }
        executor = "slurm"
    }
    withName: Denoise_T1 {
        time = { 5.m * task.attempt }
        executor = "slurm"
    }
    withName: N4_T1 {
        time = { 20.m * task.attempt }
        executor = "slurm"
    }
    withName: Resample_T1 {
        time = { 8.m * task.attempt }
        executor = "slurm"
    }
    withName: Bet_T1 {
        memory = { 5.GB * task.attempt }
        time = { 35.m * task.attempt }
        executor = "slurm"
    }
    withName: Crop_T1 {
        time = { 8.m * task.attempt }
        executor = "slurm"
    }
    withName: Normalize_DWI {
        time = { 5.m * task.attempt }
        executor = "slurm"
    }
    withName: Resample_DWI {
        time = { 3.m * task.attempt }
        executor = "slurm"
    }
    withName: Extract_B0 {
        time = { 5.m * task.attempt }
        executor = "slurm"
    }
    withName: Extract_SH_Fitting_Shell {
        time = { 8.m * task.attempt }
        executor = "slurm"
    }
    withName: SH_Fitting {
        time = { 5.m * task.attempt }
        executor = "slurm"
    }
    withName: Extract_DTI_Shell {
        time = { 8.m * task.attempt }
        executor = "slurm"
    }
    withName: DTI_Metrics {
        memory = { 5.GB * task.attempt }
        time = { 6.m * task.attempt }
        executor = "slurm"
    }
    withName: Extract_FODF_Shell {
        memory = { 5.GB * task.attempt }
        time = { 8.m * task.attempt }
        executor = "slurm"
    }
    withName: Register_T1 {
        memory = { 5.GB * task.attempt }
        time = { 40.m * task.attempt }
        executor = "slurm"
    }
    withName: Register_Freesurfer {
        memory = { 5.GB * task.attempt }
        time = { 15.m * task.attempt }
        executor = "slurm"
    }
    withName: Segment_Freesurfer {
        memory = { 5.GB * task.attempt }
        time = { 20.m * task.attempt }
        executor = "slurm"
    }
    withName: Segment_Tissues {
        time = { 8.m * task.attempt }
        executor = "slurm"
    }
    withName: Compute_FRF {
        time = { 8.m * task.attempt }
        executor = "slurm"
    }
    withName: Mean_FRF {
        time = { 8.m * task.attempt }
        executor = "slurm"
    }
    withName: FODF_Metrics {
        memory = { 20.GB * task.attempt }
        time = { 35.m * task.attempt }
        executor = "slurm"
    }
    withName: PFT_Tracking_Maps {
        time = { 5.m * task.attempt }
        executor = "slurm"
    }
    withName: PFT_Seeding_Mask {
        time = { 5.m * task.attempt }
        executor = "slurm"
    }
    withName: PFT_Tracking {
        memory = { 10.GB * task.attempt }
        time = { 6.h * task.attempt }
        executor = "slurm"
    }
    withName: Local_Tracking_Mask {
        time = { 5.m * task.attempt }
        executor = "slurm"
    }
    withName: Local_Seeding_Mask {
        time = { 5.m * task.attempt }
        executor = "slurm"
    }
    withName: Local_Tracking {
        memory = { 10.GB * task.attempt }
        time = { 3.h * task.attempt }
        executor = "slurm"
    }
}

executor {
  pollInterval = '60 sec'
  submitRateLimit = '60/1min'
  queueSize = 100 
}
